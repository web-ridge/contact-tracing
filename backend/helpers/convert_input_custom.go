// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package helpers

import (
	"github.com/web-ridge/contact-tracing/backend/graphql_models"
	"github.com/web-ridge/contact-tracing/backend/models"
)

func DeviceKeyCreateInputsToBoiler(am []*graphql_models.DeviceKeyCreateInput) []*models.DeviceKey {
	ar := make([]*models.DeviceKey, len(am))
	for i, m := range am {
		ar[i] = DeviceKeyCreateInputToBoiler(
			m,
		)
	}
	return ar
}

func DeviceKeyCreateInputToBoiler(
	m *graphql_models.DeviceKeyCreateInput,
) *models.DeviceKey {
	if m == nil {
		return nil
	}
	r := &models.DeviceKey{
		Hash:     m.Hash,
		Password: m.Password,
		Time:     m.Time,
	}
	return r
}

func InfectedEncounterCreateInputsToBoiler(am []*graphql_models.InfectedEncounterCreateInput) []*models.InfectedEncounter {
	ar := make([]*models.InfectedEncounter, len(am))
	for i, m := range am {
		ar[i] = InfectedEncounterCreateInputToBoiler(
			m,
		)
	}
	return ar
}

func InfectedEncounterCreateInputToBoiler(
	m *graphql_models.InfectedEncounterCreateInput,
) *models.InfectedEncounter {
	if m == nil {
		return nil
	}
	r := &models.InfectedEncounter{
		PossibleInfectedHash: m.PossibleInfectedHash,
		Rssi:                 m.Rssi,
		Hits:                 m.Hits,
		Time:                 m.Time,
		Duration:             m.Duration,
	}
	return r
}
