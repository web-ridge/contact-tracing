enum Risk {
  HIGH_RISK
  MIDDLE_RISK
  LOW_RISK
}

type InfectionAlert {
  howManyEncounters: Int!
  risk: Risk!
}

type Query {
  infectedEncounters(
    deviceHashesOfMyOwn: [DeviceKeyParam!]! # User own device hashes over 2 week period
    optionalOtherHashes: [Encounter!] # If user enabled alerts from infected iOS devices, the need to send all the contact they have been in contact with
  ): [InfectionAlert]!
}

# Encounter is used for Android devices wo have opt in for iOS alert
# Their encounters would have otherwise stood on their device till they say they are infected
# We do not save these encounters it's only used to find Infected=true DeviceKeys
# iOS users share their infection status with us as stated in the PrivacyStatement
# They can remove always remove their infection status if they still have the app installed
input Encounter {
  possibleInfectedHash: String!
  rssi: Int!
  hits: Int!
  time: Int!
  duration: Int!
}

input DeviceKeyParam {
  hash: String! # hash of random generated id
  password: String! # password of this key to fetch infectedEncounters or to remove
}

input InfectedEncounterCreateInput {
  possibleInfectedHash: String!
  rssi: Int!
  hits: Int!
  time: Int!
  duration: Int!
}

input InfectedEncountersCreateInput {
  infectedEncounters: [InfectedEncounterCreateInput!]!
}

input DeviceKeyCreateInput {
  hash: String!
  password: String!
  time: Int!
}

type OkPayload {
  ok: Boolean!
}

type Mutation {
  # Let Android user share their contactmoments no trace back to user will be saved!
  createInfectedEncounters(input: InfectedEncountersCreateInput!): OkPayload!

  # Let iOS users register their device keys of two weeks as infected
  registerDeviceKeysAsInfected(keys: [DeviceKeyParam!]!): OkPayload!

  # User generated a device key and password so know this uuid really belongs to that user
  createDeviceKey(input: DeviceKeyCreateInput!): OkPayload!

  ## AVG -> User should be able to always remove all their data from server
  # Let user remove infected encounters on their device keys from database (AVG)
  deleteInfectedEncountersOnKeys(keys: [DeviceKeyParam!]!): OkPayload!

  removeDeviceKeys(keys: [DeviceKeyParam!]!): OkPayload!
}
